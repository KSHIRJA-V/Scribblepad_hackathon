{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Adventure Game</title>\n  <link rel=\"stylesheet\" href=\"style.css\">\n  <style>\n       * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n      }\n      \n      body {\n        font-family: Arial, sans-serif;\n        background-color: #111;\n        color: #eee;\n        overflow: hidden;\n      }\n      \n      #game-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        position: relative;\n        background-image: url(\"image.jpg\");\n        display: flex;\n        background-size: contain;\n        \n      }\n      \n      #game-map {\n        width: 800px;\n        height: 600px;\n        background-color: #222;\n        border: 2px solid #444;\n      }\n      \n      button {\n        position: absolute;\n        padding: 10px 20px;\n        font-size: 18px;\n        color: #fff;\n        background-color: #444;\n        border: none;\n        cursor: pointer;\n      }\n      \n      #start-game {\n        display: block;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n      }\n      \n      #restart {\n        display: none;\n        top: 10px;\n        left: 10px;\n      }\n      \n  </style>\n</head>\n<body>\n  <div id=\"game-container\">\n    <canvas id=\"game-map\"></canvas>\n    <button id=\"start-game\">START GAME</button>\n    <button id=\"restart\">RESTART</button>\n  </div>\n  <script src=\"game.js\"></script>\n</body>\n</html>\n\n\n\n\n",
      "status": "",
      "output": "",
      "type": "html"
    },
    {
      "code": " const canvas = document.getElementById('game-map');\nconst ctx = canvas.getContext('2d');\ncanvas.width = 800;\ncanvas.height = 600;\n\nlet character = { x: canvas.width / 2, y: canvas.height / 2, width: 30, height: 30, speed: 5 };\nlet chaser = { x: 100, y: 100, width: 30, height: 30, speed: 1 };\n\nlet gameStarted = false;\nlet scatteredLetters = [];\nlet randomWord = \"HAUNTED\";\nlet collectedLetters = [];\nlet letterOutOfOrderAlerted = false;\n\n// Extra life feature\nlet extraLife = false;\nlet extraLifeItem = null;\nlet extraLifeAvailable = false;  // Track if extra life has already appeared\nlet heartScale = 1;\nlet heartScaleDirection = 0.02;\n\n// Track number of restarts\nlet restartCount = 0;\nconst maxRestarts = 3;\n\n// Generate non-overlapping random positions for letters\nfunction generateLetters() {\n  scatteredLetters = [];\n  for (let i = 0; i < randomWord.length; i++) {\n    let x, y, overlap;\n    do {\n      x = Math.random() * (canvas.width - 50);\n      y = Math.random() * (canvas.height - 50);\n      overlap = scatteredLetters.some(\n        letter => Math.abs(letter.x - x) < 40 && Math.abs(letter.y - y) < 40\n      );\n    } while (overlap);\n    scatteredLetters.push({ letter: randomWord[i], x, y });\n  }\n}\n\n// Generate extra life item at a random position\nfunction generateExtraLife() {\n  if (!extraLifeAvailable) {\n    let x, y, overlap;\n    do {\n      x = Math.random() * (canvas.width - 50);\n      y = Math.random() * (canvas.height - 50);\n      overlap = scatteredLetters.some(\n        letter => Math.abs(letter.x - x) < 40 && Math.abs(letter.y - y) < 40\n      );\n    } while (overlap);\n    extraLifeItem = { x, y };\n    extraLifeAvailable = true;\n  }\n}\n\n// Draws the game character\nfunction drawCharacter() {\n  ctx.fillStyle = '#3b5';\n  ctx.fillRect(character.x, character.y, character.width, character.height);\n}\n\n// Draws the chaser\nfunction drawChaser() {\n  ctx.fillStyle = '#d33';\n  ctx.fillRect(chaser.x, chaser.y, chaser.width, chaser.height);\n}\n\n// Draws the map background\nfunction drawMap() {\n  ctx.fillStyle = '#222';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.strokeStyle = '#555';\n  //ctx.lineWidth = 5;\n  ctx.strokeRect(50, 50, 700, 500);\n}\n\n// Move chaser towards character\nfunction moveChaser() {\n  const dx = character.x - chaser.x;\n  const dy = character.y - chaser.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  if (distance > 0) {\n    chaser.x += (dx / distance) * chaser.speed;\n    chaser.y += (dy / distance) * chaser.speed;\n  }\n}\n\n// Handle character movement\nfunction moveCharacter(e) {\n  if (gameStarted) {\n    switch (e.key) {\n      case 'ArrowUp':\n        if (character.y > 0) character.y -= character.speed;\n        break;\n      case 'ArrowDown':\n        if (character.y + character.height < canvas.height) character.y += character.speed;\n        break;\n      case 'ArrowLeft':\n        if (character.x > 0) character.x -= character.speed;\n        break;\n      case 'ArrowRight':\n        if (character.x + character.width < canvas.width) character.x += character.speed;\n        break;\n    }\n  }\n}\n\n// Draw letters to collect\nfunction drawLetters() {\n  scatteredLetters.forEach(({ letter, x, y }) => {\n    ctx.fillStyle = '#FFF';\n    ctx.font = '20px Arial';\n    ctx.fillText(letter, x + 5, y + 20);\n    ctx.strokeStyle = '#FFF';\n    ctx.strokeRect(x, y, 30, 30);\n  });\n}\n\n// Draw extra life as a beating heart\nfunction drawExtraLife() {\n  if (extraLifeItem) {\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(extraLifeItem.x + 15, extraLifeItem.y + 10, 10 * heartScale, 0, Math.PI * 2);\n    ctx.arc(extraLifeItem.x + 25, extraLifeItem.y + 10, 10 * heartScale, 0, Math.PI * 2);\n    ctx.moveTo(extraLifeItem.x + 20, extraLifeItem.y + 20);\n    ctx.lineTo(extraLifeItem.x + 10, extraLifeItem.y + 30);\n    ctx.lineTo(extraLifeItem.x + 30, extraLifeItem.y + 30);\n    ctx.closePath();\n    ctx.fill();\n\n    // Heart \"beat\" animation\n    heartScale += heartScaleDirection;\n    if (heartScale > 1.1 || heartScale < 1) heartScaleDirection *= -1;\n  }\n}\n\n// Display the target word in the top-right corner\nfunction displayTargetWord() {\n  ctx.fillStyle = '#FFF';\n  ctx.font = '20px Arial';\n  ctx.fillText(\"Collect: \" + randomWord, (canvas.width - 150) / 2, 50);\n}\n\n// Check letter collection and game progress\nfunction checkLetterCollection() {\n  scatteredLetters.forEach((item, index) => {\n    if (\n      character.x < item.x + 20 &&\n      character.x + character.width > item.x &&\n      character.y < item.y + 20 &&\n      character.y + character.height > item.y\n    ) {\n      if (item.letter === randomWord[collectedLetters.length]) {\n        collectedLetters.push(item.letter);\n        scatteredLetters.splice(index, 1);\n        letterOutOfOrderAlerted = false;\n\n        // Generate the extra life after collecting the third letter\n        if (collectedLetters.length === 3 && !extraLifeAvailable) {\n          generateExtraLife();\n        }\n      } else if (!letterOutOfOrderAlerted) {\n        alert(\"Collect letters in order!\");\n        letterOutOfOrderAlerted = true;\n      }\n    }\n  });\n\n  if (collectedLetters.join('') === randomWord) {\n    alert(\"You won! Word formed: \" + randomWord);\n    resetGame();\n  }\n}\n\n// Check for extra life collection\nfunction checkExtraLifeCollection() {\n  if (\n    extraLifeItem &&\n    character.x < extraLifeItem.x + 20 &&\n    character.x + character.width > extraLifeItem.x &&\n    character.y < extraLifeItem.y + 20 &&\n    character.y + character.height > extraLifeItem.y\n  ) {\n    extraLife = true;\n    extraLifeItem = null;  // Remove the extra life after collection\n  }\n}\n\n// Check game over condition\nfunction checkGameOver() {\n  if (\n    chaser.x < character.x + character.width &&\n    chaser.x + chaser.width > character.x &&\n    chaser.y < character.y + character.height &&\n    chaser.y + chaser.height > character.y\n  ) {\n    if (extraLife) {\n      extraLife = false;\n      moveChaserToFarthestCorner();\n    } else {\n      alert(\"Game Over! The chaser caught you!\");\n      resetGame();\n    }\n  }\n}\n\n// Move chaser to the corner farthest from the player\nfunction moveChaserToFarthestCorner() {\n  const corners = [\n    { x: 0, y: 0 },\n    { x: canvas.width - chaser.width, y: 0 },\n    { x: 0, y: canvas.height - chaser.height },\n    { x: canvas.width - chaser.width, y: canvas.height - chaser.height },\n  ];\n  corners.sort((a, b) => {\n    const distA = Math.sqrt((character.x - a.x) ** 2 + (character.y - a.y) ** 2);\n    const distB = Math.sqrt((character.x - b.x) ** 2 + (character.y - b.y) ** 2);\n    return distB - distA;\n  });\n  chaser.x = corners[0].x;\n  chaser.y = corners[0].y;\n}\n\n// Main game loop\nfunction gameLoop() {\n  if (gameStarted) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawMap();\n    drawCharacter();\n    drawChaser();\n    moveChaser();\n    drawLetters();\n    drawExtraLife();\n    displayTargetWord();\n    checkLetterCollection();\n    checkExtraLifeCollection();\n    checkGameOver();\n    requestAnimationFrame(gameLoop);\n  }\n}\n\n// Reset game to initial state\nfunction resetGame() {\n  if (restartCount < maxRestarts) {\n    restartCount++;\n    character.x = canvas.width / 2;\n    character.y = canvas.height / 2;\n    chaser.x = 100;\n    chaser.y = 100;\n    collectedLetters = [];\n    generateLetters();\n    extraLife = false;\n    extraLifeAvailable = false;\n    gameStarted = false;  // End game before restart\n    if (restartCount === maxRestarts) {\n      alert(\"Game over! Maximum restarts reached.\");\n    } else {\n      setTimeout(() => {\n        gameStarted = true;  // Start game again after a short delay\n        gameLoop();\n      }, 1000);  // Short delay before restarting\n    }\n  }\n}\n\n// Start the game\nfunction startGame() {\n  gameStarted = true;\n  generateLetters();\n  gameLoop();\n}\n\n// Listen for keyboard inputs\n//window.addEventListener('keydown', moveCharacter);\n\ndocument.getElementById('start-game').addEventListener('click', () => {\n  gameStarted = true;\n  generateLetters();\n  gameLoop();\n  document.getElementById('start-game').style.display = 'none';\n\n});\n\n// Event listener for character movement\n// window.addEventListener('keydown', moveCharacter);\n\ndocument.getElementById('start-game').addEventListener('click', () => {\n  gameStarted = true;\n  generateLetters();\n  gameLoop();\n  document.getElementById('start-game').style.display = 'none';\n  document.getElementById('instructions').style.display = 'none';\n});\n\n// Event listener for character movement\nwindow.addEventListener('keydown', moveCharacter);\n",
      "status": "",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}